* practice assessment walkthrough

#+begin_src bash
  git clone git@github.com:appacademy/aa11-assessment-practice-sequelize-ft.git
  cd aa11-assessment-practice-sequelize-ft
  npm i
  cd phase-1
  npm i
  npm test
#+end_src

run npm i in the top level, *and* in each phase

#+begin_src bash
  npx sequelize model:generate --name Airplane --attributes airlineCode:string,flightNumber:string,inService:boolean,maxNumPassengers:integer,currentNumPassengers:integer,firstFlightDate:date
#+end_src

** constraints

=db/DATETIME-create-airplane.js=
#+begin_src js
{
      id: {
        allowNull: false,
        autoIncrement: true,
        primaryKey: true,
        type: Sequelize.INTEGER,
      },
      airlineCode: {
        type: Sequelize.STRING,
        allowNull: false,
      },
      flightNumber: {
        type: Sequelize.STRING,
        allowNull: false,
      },
      inService: {
        type: Sequelize.BOOLEAN,
        allowNull: false,
        defaultValue: true,
      },
      maxNumPassengers: {
        type: Sequelize.INTEGER,
        allowNull: false,
      },
      currentNumPassengers: {
        type: Sequelize.INTEGER,
        allowNull: true,
      },
      firstFlightDate: {
        type: Sequelize.DATE,
      },
      createdAt: {
        allowNull: false,
        type: Sequelize.DATE,
        defaultValue: Sequelize.literal("CURRENT_TIMESTAMP"),
      },
      updatedAt: {
        allowNull: false,
        type: Sequelize.DATE,
        defaultValue: Sequelize.literal("CURRENT_TIMESTAMP"),
      },
    }
#+end_src

check test/data/airplane to see what values different fields can have

** model level validations
=db/models/airplane.js=
#+begin_src js
  // some weird stuff
#+end_src

look in phase 2 to see hint that there's an index on universe and release year
** phase 2
create a new =.env=

=db/migrations/20220413204903-create-superhero.js=
#+begin_src js
#+end_src
** phase 3

migrate
#+begin_src bash
  npx dotenv sequelize db:migrate
#+end_src

seed
#+begin_src bash
  npx dotenv sequelize db:seed:all
#+end_src

** phase 4
*** part 1
create env file
#+begin_src bash
  cp .env.example .env
  npx dotenv sequelize db:migrate
#+end_src

everyone has an id already

add team's sportId column
#+begin_src bash
npx sequelize migration:generate --name add-sportId-to-team
#+end_src

=db/migrations/DATETIME-add-sportId-to-team.js=
#+begin_src js
"use strict";

/** @type {import('sequelize-cli').Migration} */
module.exports = {
  async up(queryInterface, Sequelize) {
    await queryInterface.addColumn("Teams", "sportId", {
      // constraints
      type: Sequelize.INTEGER,
      allowNull: false,
      references: {
        model: "Sports",
      },
      onDelete: "CASCADE",
    });
  },

  async down(queryInterface, Sequelize) {
    await queryInterface.removeColumn("Teams", "sportId");
  },
};
#+end_src

now go into current team and add a sport id

#+begin_src bash
npx sequelize migration:generate --name add-sportId-to-team
#+end_src

=db/models/team.js=
#+begin_src js
    static associate(models) {
      // define association here
      team.belongsTo(models.Sport, { foreignKey: "sportId" });
    }
#+end_src

=db/models/sport.js=
also add hasMany here


now go into current players and add a team id

#+begin_src bash
npx sequelize migration:generate --name add-teamId-to-players
#+end_src

**** now create a new table

#+begin_src bash
  npx sequelize model:generate --name DraftPick --attributes fanId:integer,playerId:integer
#+end_src

*** missed some stuff
  + after creating migrations,
  + actually do the migrations,
  + then seed

migrate

=app.js= time
#+begin_src bash
#+end_src

*** part 2
in team model
